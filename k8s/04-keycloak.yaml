apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-pvc
  namespace: model-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
  namespace: model-registry
data:
  model-registry-realm-realm.json: |
    {
      "realm": "model-registry-realm",
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": true,
      "clients": [
        {
          "clientId": "model-registry-app",
          "enabled": true,
          "protocol": "openid-connect",
          "publicClient": false,
          "secret": "LZbXY16jR0BRFazUKO3qTAoqXL3Uoet7",
          "redirectUris": ["*"],
          "webOrigins": ["*"],
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "fullScopeAllowed": true,
          "protocolMappers": [
            {
              "name": "audience-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "config": {
                "included.client.audience": "model-registry-app",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "clientId": "m2m-client",
          "enabled": true,
          "protocol": "openid-connect",
          "publicClient": false,
          "secret": "MySecureSecretForM2M",
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": false,
          "fullScopeAllowed": true
        }
      ],
      "roles": {
        "realm": [
          {
            "name": "data-scientist",
            "description": "Data Scientist role"
          },
          {
            "name": "system-administrator",
            "description": "System Administrator role"
          },
          {
            "name": "user",
            "description": "Regular user role"
          }
        ]
      },
      "users": [
        {
          "username": "alice",
          "enabled": true,
          "email": "alice@example.com",
          "firstName": "Alice",
          "lastName": "DataScientist",
          "credentials": [
            {
              "type": "password",
              "value": "alice",
              "temporary": false
            }
          ],
          "realmRoles": ["data-scientist"]
        },
        {
          "username": "bob",
          "enabled": true,
          "email": "bob@example.com",
          "firstName": "Bob",
          "lastName": "SystemAdministrator",
          "credentials": [
            {
              "type": "password",
              "value": "bob",
              "temporary": false
            }
          ],
          "realmRoles": ["system-administrator"]
        },
        {
          "username": "carol",
          "enabled": true,
          "email": "carol@example.com",
          "firstName": "Carol",
          "lastName": "User",
          "credentials": [
            {
              "type": "password",
              "value": "carol",
              "temporary": false
            }
          ],
          "realmRoles": ["user"]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: model-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.3.1
          args:
            - start
            - --hostname-strict=false
            - --http-enabled=true
            - --proxy-headers=xforwarded
            - --import-realm
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https
          env:
            - name: KC_IMPORT_FILE_MODEL_REGISTRY_REALM_STRATEGY
              value: "OVERWRITE"                                    # Overwrite existing realm with the same name. Only for demo purposes.
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL
              value: "jdbc:postgresql://postgres:5432/keycloak_db"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: model-registry-secrets
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: model-registry-secrets
                  key: POSTGRES_PASSWORD
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_PROXY_HEADERS
              value: "xforwarded"
            - name: KC_FEATURES
              value: "hostname:v2"
          volumeMounts:
            - name: keycloak-data
              mountPath: /opt/keycloak/data
            - name: realm-config
              mountPath: /opt/keycloak/data/import
              readOnly: true
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
      volumes:
        - name: keycloak-data
          persistentVolumeClaim:
            claimName: keycloak-pvc
        - name: realm-config
          configMap:
            name: keycloak-realm-config
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: model-registry
spec:
  selector:
    app: keycloak
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 8443
      targetPort: 8443
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: model-registry
  annotations:
    traefik.ingress.kubernetes.io/rule-type: "Host"
spec:
  ingressClassName: traefik
  rules:
    - host: keycloak.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080 