apiVersion: v1
kind: ConfigMap
metadata:
  name: redpanda-config
  namespace: model-registry
data:
  redpanda.yaml: |
    # RedPanda configuration - simplified for Kubernetes
    redpanda:
      data_directory: /var/lib/redpanda/data
      node_id: 0
      rpc_server:
        address: 0.0.0.0
        port: 33145
      kafka_api:
        - address: 0.0.0.0
          port: 9092
          name: internal
        - address: 0.0.0.0
          port: 9092
          name: external
      admin:
        - address: 0.0.0.0
          port: 9644
    
    pandaproxy: {}
    schema_registry: {}
    
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redpanda
  namespace: model-registry
  labels:
    app: redpanda
spec:
  serviceName: redpanda
  replicas: 3
  selector:
    matchLabels:
      app: redpanda
  template:
    metadata:
      labels:
        app: redpanda
    spec:
      containers:
      - name: redpanda
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.5
        command:
        - /bin/bash
        - -c
        - |
          # Копируем конфиг в writable директорию
          cp /etc/redpanda/redpanda.yaml /tmp/redpanda.yaml
          # Запускаем RedPanda с конфигом из временной директории
          /usr/bin/rpk redpanda start \
          --config /tmp/redpanda.yaml \
          --overprovisioned \
          --smp 1 \
          --memory 1G \
          --reserve-memory 0M \
          --node-id ${HOSTNAME##*-} \
          --kafka-addr PLAINTEXT_INTERNAL://0.0.0.0:9092,PLAINTEXT_EXTERNAL://0.0.0.0:9093 \
          --advertise-kafka-addr PLAINTEXT_INTERNAL://redpanda-${HOSTNAME##*-}.redpanda.model-registry.svc.cluster.local:9092,PLAINTEXT_EXTERNAL://localhost:9093 \
          --advertise-rpc-addr redpanda-${HOSTNAME##*-}.redpanda.model-registry.svc.cluster.local:33145
        ports:
        - containerPort: 9092
          name: kafka-internal
        - containerPort: 9093
          name: kafka-external
        - containerPort: 9644
          name: admin
        - containerPort: 33145
          name: rpc
        env:
        - name: REDPANDA_ENVIRONMENT
          value: "kubernetes"
        - name: REDPANDA_CLUSTER_ID
          value: "ml-platform-redpanda-cluster"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: redpanda-data
          mountPath: /var/lib/redpanda/data
        - name: config
          mountPath: /etc/redpanda
        livenessProbe:
          httpGet:
            path: /v1/status/ready
            port: 9644
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /v1/status/ready
            port: 9644
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: redpanda-config
  volumeClaimTemplates:
  - metadata:
      name: redpanda-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: local-path
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda
  namespace: model-registry
  labels:
    app: redpanda
spec:
  clusterIP: None
  selector:
    app: redpanda
  ports:
  - name: kafka-internal
    port: 9092
    targetPort: 9092
  - name: kafka-external
    port: 9093
    targetPort: 9093
  - name: admin
    port: 9644
    targetPort: 9644
  - name: rpc
    port: 33145
    targetPort: 33145
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda-external
  namespace: model-registry
  labels:
    app: redpanda
spec:
  selector:
    app: redpanda
  ports:
  - name: kafka-external
    port: 9093
    targetPort: 9093
  type: LoadBalancer